name: 'AdoreMe Tech Composer Action'
description: 'Run the composer config and install commands with caching of libs.'
inputs:
  php-image:
    description: 'The PHP image to use'
    required: false
  composer-cache-dir:
    description: 'Composer cache directory'
    required: true
    default: '/.composer/cache'
  composer-host-cache-dir:
    description: 'Composer host cache directory'
    required: true
    default: '/home/runner/.composer/cache'
  composer-home:
    description: 'Composer home directory'
    required: true
    default: '/.composer/'
  cache:
    description: 'Cache composer libs'
    required: false
    default: 'false'
  composer-no-dev:
    description: 'Do not install dev dependencies'
    required: true
    default: 'false'
  gh-oauth-token:
    description: 'Github token'
    required: false
  composer-self-update:
    description: 'Run composer self-update'
    required: false
    default: 'false'
  composer-self-update-version:
    description: 'Composer self-update version'
    required: false
    default: 'latest'
runs:
  using: 'composite'
  steps:
    - name: 'Create cache dir'
      shell: bash
      run: |
        mkdir -p ${{ inputs.composer-host-cache-dir }}
    - name: 'Composer cache'
      if: ${{ inputs.cache == 'true' }}
      uses: actions/cache@v3.0.11
      with:
        path: ${{ inputs.composer-host-cache-dir }}
        key: composer-cache-${{ hashFiles('composer.lock') }}
        restore-keys: |
          composer-cache-${{ hashFiles('composer.lock') }}
    - name: 'Start Container'
      run: $GITHUB_ACTION_PATH/start-container.sh
      shell: bash
      env:
        INPUT_PHP_IMAGE: ${{ inputs.php-image }}
        INPUT_COMPOSER_HOME: ${{ inputs.composer-home }}
        INPUT_COMPOSER_CACHE_DIR: ${{ inputs.composer-cache-dir }}
        INPUT_COMPOSER_HOST_CACHE_DIR: ${{ inputs.composer-host-cache-dir }}
    - name: 'Run Composer Install'
      id: composer-install
      run: $GITHUB_ACTION_PATH/composer.sh
      shell: bash
      env:
        INPUT_COMPOSER_NO_DEV: ${{ inputs.composer-no-dev }}
        INPUT_GH_OAUTH_TOKEN: ${{ inputs.gh-oauth-token }}
        INPUT_COMPOSER_SELF_UPDATE: ${{ inputs.composer-self-update }}
        INPUT_COMPOSER_SELF_UPDATE_VERSION: ${{ inputs.composer-self-update-version }}
    - name: 'Notify commiter'
      if: always()
      uses: actions/github-script@v6.3.3
      with:
          script: |
            if (${{ steps.composer-install.outputs.composer-error }} == true) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `@${{ github.event.pull_request.user.login }}<br />âš  Composer has errors.<br /><details><summary>Details</summary>${{ steps.composer-install.outputs.composer-error-message }}</details>`
              })
              github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ['composer-check-error']
              })
            }
    - name: 'Stop Container'
      if: always()
      shell: bash
      run: |
        docker stop php-container -t 0 || true
        docker rm php-container || true